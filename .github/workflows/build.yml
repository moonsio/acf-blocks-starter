name: Build Assets

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Need to fetch all history for git-auto-commit to work
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.3"
          tools: composer

      - name: Verify tools installation
        run: |
          php --version
          composer --version

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: "9"
          run_install: false

      - name: Install PHP dependencies
        run: |
          # Check if composer.json exists
          if [ -f "composer.json" ]; then
            echo "Composer configuration:"
            cat composer.json
            composer validate || echo "Warning: composer.json validation failed but continuing"
            composer install --no-dev --optimize-autoloader
            echo "Composer installation completed!"
          else
            echo "composer.json not found, skipping PHP dependencies"
          fi

      - name: Install Node dependencies
        run: |
          pnpm install

      - name: Build assets
        run: |
          pnpm run prod

      - name: Verify build output
        run: |
          # Ensure dist directory exists and has content
          mkdir -p dist
          echo "Contents of dist directory:"
          ls -la dist || echo "No files found in dist directory"

      - name: Clean up Node dependencies
        run: |
          rm -rf node_modules

      - name: Clean up Composer development dependencies
        run: |
          # Check if composer.json exists
          if [ -f "composer.json" ]; then
            rm -rf vendor
            composer install --no-dev --optimize-autoloader
            echo "Vendor directory after reinstall:"
            ls -la vendor || echo "No vendor directory"
          else
            echo "composer.json not found, skipping PHP dependencies cleanup"
          fi

      - name: Create empty vendor directory if it doesn't exist
        run: |
          mkdir -p vendor
          touch vendor/.gitkeep

      - name: Commit built assets
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Build assets [skip ci]"
          file_pattern: "dist/* vendor/* .gitignore"
          add_options: "-f" # Force add ignored files
          skip_dirty_check: false
